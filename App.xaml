<Application
	x:Class="CeleryApp.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:CeleryApp" xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary>
					<ResourceDictionary.MergedDictionaries>
						<ResourceDictionary
							Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml" />
						<ResourceDictionary
							Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Indigo.xaml" />
						<ResourceDictionary
							Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
						<ResourceDictionary
							Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
						<ResourceDictionary
							Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
						<ResourceDictionary
							Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
						<ResourceDictionary
							Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Yellow.xaml" />
					</ResourceDictionary.MergedDictionaries>
					<SolidColorBrush
						x:Key="PrimaryHueLightBrush"
						Color="{StaticResource Primary100}" />
					<SolidColorBrush
						x:Key="PrimaryHueLightForegroundBrush"
						Color="{StaticResource Primary100Foreground}" />
					<SolidColorBrush
						x:Key="PrimaryHueMidBrush"
						Color="{StaticResource Primary500}" />
					<SolidColorBrush
						x:Key="PrimaryHueMidForegroundBrush"
						Color="Transparent" />
					<SolidColorBrush
						x:Key="PrimaryHueDarkBrush"
						Color="{StaticResource Primary700}" />
					<SolidColorBrush
						x:Key="PrimaryHueDarkForegroundBrush"
						Color="{StaticResource Primary700Foreground}" />
					<SolidColorBrush
						x:Key="SecondaryAccentBrush"
						Color="#FF317E16" />
					<SolidColorBrush
						x:Key="SecondaryAccentForegroundBrush"
						Color="{StaticResource Accent200Foreground}" />
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
			<SolidColorBrush
				Color="Transparent"
				x:Key="RippleAssist.Feedback" />
			<Style
				TargetType="{x:Type dragablz:TabablzControl}"
				BasedOn="{StaticResource MaterialDesignTabablzControlStyle}"
				x:Key="{x:Type dragablz:TabablzControl}">
				<Setter
					Property="Height"
					Value="10" />
			</Style>
			<Style
				TargetType="{x:Type ProgressBar}"
				x:Key="RoundeProgressBar">
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ProgressBar}">
							<Grid
								Name="TemplateRoot">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup
										x:Name="CommonStates">
										<VisualState
											x:Name="Determinate" />
										<VisualState
											x:Name="Indeterminate">
											<Storyboard
												RepeatBehavior="Forever">
												<DoubleAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
													Storyboard.TargetName="Animation">
													<EasingDoubleKeyFrame
														KeyTime="0"
														Value="0.25" />
													<EasingDoubleKeyFrame
														KeyTime="0:0:1"
														Value="0.25" />
													<EasingDoubleKeyFrame
														KeyTime="0:0:2"
														Value="0.25" />
												</DoubleAnimationUsingKeyFrames>
												<PointAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
													Storyboard.TargetName="Animation">
													<EasingPointKeyFrame
														KeyTime="0"
														Value="-0.5,0.5" />
													<EasingPointKeyFrame
														KeyTime="0:0:1"
														Value="0.5,0.5" />
													<EasingPointKeyFrame
														KeyTime="0:0:2"
														Value="1.5,0.5" />
												</PointAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Border
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									CornerRadius="5" />
								<Rectangle
									Name="PART_Track" />
								<Grid
									Name="PART_Indicator">
									<Rectangle
										Name="Indicator"
										Fill="{TemplateBinding Foreground}"
										RadiusX="5"
										RadiusY="5" />
									<Rectangle
										Name="Animation"
										Fill="{TemplateBinding Foreground}"
										RenderTransformOrigin="0.5,0.5"
										RadiusX="5"
										RadiusY="5">
										<UIElement.RenderTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform />
												<TranslateTransform />
											</TransformGroup>
										</UIElement.RenderTransform>
									</Rectangle>
								</Grid>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ProgressBar.Orientation"
									Value="Vertical">
									<Setter
										TargetName="TemplateRoot"
										Property="FrameworkElement.LayoutTransform">
										<Setter.Value>
											<RotateTransform
												Angle="-90" />
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger
									Property="ProgressBar.IsIndeterminate"
									Value="True">
									<Setter
										TargetName="Indicator"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="kys">
				<Setter
					Property="Background"
					Value="#FF232323" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#FF191919" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								CornerRadius="0"
								Background="{TemplateBinding Background}"
								BorderThickness="1"
								BorderBrush="#00FFFFFF">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsMouseOver"
						Value="True">
						<TriggerBase.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										To="#FF317E16"
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.EnterActions>
						<TriggerBase.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.ExitActions>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="{x:Type CheckBox}">
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<BulletDecorator>
								<BulletDecorator.Bullet>
									<StackPanel
										Orientation="Horizontal">
										<Border
											Name="Border"
											Width="31"
											Height="29"
											Background="#FF1F1F1F"
											CornerRadius="5">
											<Path
												Name="CheckMark"
												Stretch="Uniform"
												Stroke="#FFFFFFFF"
												Width="15"
												Height="15"
												SnapsToDevicePixels="False"
												StrokeThickness="2"
												Data="M0,0 L7,7 M0,7 L7,0" />
										</Border>
									</StackPanel>
								</BulletDecorator.Bullet>
							</BulletDecorator>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="false">
									<Setter
										TargetName="CheckMark"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="false">
									<Setter
										TargetName="CheckMark"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type ToggleButton}"
				x:Key="WhyDoILive">
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToggleButton}">
							<Border
								CornerRadius="2"
								Background="{TemplateBinding Background}"
								BorderThickness="1">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsMouseOver"
						Value="True">
						<TriggerBase.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Storyboard.TargetProperty="Width"
										From="32.5"
										To="34" />
									<DoubleAnimation
										Storyboard.TargetProperty="Opacity"
										From="1"
										To="0.5"
										BeginTime="0:0:0"
										Duration="0:0:0.3" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.EnterActions>
						<TriggerBase.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Storyboard.TargetProperty="Opacity"
										From="0.5"
										To="1"
										BeginTime="0:0:0"
										Duration="0:0:0.3" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.ExitActions>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="Mommy2">
				<Setter
					Property="Background"
					Value="#FF151515" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#FF151515" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								CornerRadius="0"
								Background="{TemplateBinding Background}"
								BorderThickness="1">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsMouseOver"
						Value="True">
						<TriggerBase.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										To="#E1085199"
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x">
										<ColorAnimation.EasingFunction>
											<PowerEase
												EasingMode="EaseInOut"
												Power="4" />
										</ColorAnimation.EasingFunction>
									</ColorAnimation>
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.EnterActions>
						<TriggerBase.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.ExitActions>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type Button}"
				x:Key="OWODADDY">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<Border
								CornerRadius="3"
								Background="{TemplateBinding Background}"
								BorderThickness="1"
								BorderBrush="#00FFFFFF">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsMouseOver"
						Value="True">
						<TriggerBase.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										To="#FF414141"
										Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x">
										<ColorAnimation.EasingFunction>
											<PowerEase
												EasingMode="EaseInOut"
												Power="4" />
										</ColorAnimation.EasingFunction>
									</ColorAnimation>
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.EnterActions>
						<TriggerBase.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.ExitActions>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type RadioButton}"
				x:Key="Iwannakms2">
				<Setter
					Property="Background"
					Value="#FF232323" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RadioButton}">
							<Border
								CornerRadius="5"
								Background="{TemplateBinding Background}"
								BorderThickness="1">
								<ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsMouseOver"
						Value="True">
						<TriggerBase.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										To="#FF2D6D33"
										Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
									<ColorAnimation
										To="#FF29C338"
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.EnterActions>
						<TriggerBase.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
									<ColorAnimation
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.ExitActions>
					</Trigger>
					<Trigger
						Property="ToggleButton.IsChecked"
						Value="True">
						<TriggerBase.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										To="#FF2D6D33"
										Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
									<ColorAnimation
										To="#FF29C338"
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.EnterActions>
						<TriggerBase.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<ColorAnimation
										Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
									<ColorAnimation
										Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
										FillBehavior="HoldEnd"
										Duration="0:0:0.25"
										AutoReverse="False"
										RepeatBehavior="1x" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.ExitActions>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type Thumb}"
				x:Key="ScrollBarTrackThumb">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Grid
								Name="Grid">
								<Rectangle
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Width="Auto"
									Height="Auto"
									Fill="#00FFFFFF" />
								<Border
									Name="CornerScrollBarRectangle"
									CornerRadius="5"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Width="Auto"
									Height="Auto"
									Margin="0,1,0,1"
									Background="{TemplateBinding Background}" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="FrameworkElement.Tag"
									Value="Horizontal">
									<Setter
										TargetName="CornerScrollBarRectangle"
										Property="Width"
										Value="Auto" />
									<Setter
										TargetName="CornerScrollBarRectangle"
										Property="Height"
										Value="6" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type ScrollBar}"
				x:Key="{x:Type ScrollBar}">
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Foreground"
					Value="#ADABAB" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Width"
					Value="7" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ScrollBar}">
							<Grid
								Name="GridRoot"
								Width="7"
								Background="{TemplateBinding Background}">
								<Grid.RowDefinitions>
									<RowDefinition
										Height="0.00001*" />
								</Grid.RowDefinitions>
								<Track
									Name="PART_Track"
									Grid.Row="0"
									IsDirectionReversed="True"
									Focusable="False">
									<Track.Thumb>
										<Thumb
											Name="Thumb"
											Background="{TemplateBinding Foreground}"
											Style="{DynamicResource ScrollBarTrackThumb}" />
									</Track.Thumb>
									<Track.IncreaseRepeatButton>
										<RepeatButton
											Name="PageUp"
											Command="ScrollBar.PageDownCommand"
											Opacity="0"
											Focusable="False" />
									</Track.IncreaseRepeatButton>
									<Track.DecreaseRepeatButton>
										<RepeatButton
											Name="PageDown"
											Command="ScrollBar.PageUpCommand"
											Opacity="0"
											Focusable="False" />
									</Track.DecreaseRepeatButton>
								</Track>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									SourceName="Thumb"
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										Value="{DynamicResource ButtonSelectBrush}"
										TargetName="Thumb"
										Property="Background" />
								</Trigger>
								<Trigger
									SourceName="Thumb"
									Property="Thumb.IsDragging"
									Value="True">
									<Setter
										Value="{DynamicResource DarkBrush}"
										TargetName="Thumb"
										Property="Background" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="Thumb"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
								<Trigger
									Property="ScrollBar.Orientation"
									Value="Horizontal">
									<Setter
										TargetName="GridRoot"
										Property="FrameworkElement.LayoutTransform">
										<Setter.Value>
											<RotateTransform
												Angle="-90" />
										</Setter.Value>
									</Setter>
									<Setter
										TargetName="PART_Track"
										Property="FrameworkElement.LayoutTransform">
										<Setter.Value>
											<RotateTransform
												Angle="-90" />
										</Setter.Value>
									</Setter>
									<Setter
										Property="Width"
										Value="Auto" />
									<Setter
										Property="Height"
										Value="8" />
									<Setter
										TargetName="Thumb"
										Property="FrameworkElement.Tag"
										Value="Horizontal" />
									<Setter
										TargetName="PageDown"
										Property="Command"
										Value="ScrollBar.PageLeftCommand" />
									<Setter
										TargetName="PageUp"
										Property="Command"
										Value="ScrollBar.PageRightCommand" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="HellWOrld">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<Border
								Name="checjbox"
								Width="31"
								Height="29"
								Background="{TemplateBinding Background}"
								CornerRadius="5">
								<Path
									Name="CheckMark"
									Stretch="Uniform"
									Stroke="#FF1F1F1F"
									Width="15"
									Height="15"
									SnapsToDevicePixels="False"
									StrokeThickness="2"
									Data="M0,0 L7,7 M0,7 L7,0" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<TriggerBase.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF009207"
													Duration="0:0:0.2"
													Storyboard.TargetProperty="Background.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.EnterActions>
									<TriggerBase.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation
													To="#FF1F1F1F"
													Duration="0:0:0.2"
													Storyboard.TargetProperty="Background.Color" />
											</Storyboard>
										</BeginStoryboard>
									</TriggerBase.ExitActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
